Resources:
  departmentalec2accessB06E2053:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Statement:
          - Action: 'ec2:*'
            Condition:
              StringEquals:
                'ec2:ResourceTag/department': '${aws:PrincipalTag/department}'
            Effect: Allow
            Resource: '*'
            Sid: AllowDepartmentEC2Management
          - Action: 'ec2:Describe*'
            Effect: Allow
            Resource: '*'
            Sid: AllowEC2DescribeAll
          - Action:
              - 'iam:UntagUser'
              - 'iam:UntagRole'
              - 'ec2:DeleteTags'
              - 'ec2:CreateTags'
              - 'ec2:TerminateInstances'
              - 'iam:TagRole'
              - 'iam:TagUser'
            Effect: Deny
            Resource: '*'
            Sid: DenyTagManagement
        Version: 2012-10-17
      Description: ''
      ManagedPolicyName: departmental-ec2-access
      Path: /
      Users:
        - Ref: AnneFBFC906B
        - Ref: SallyACB517BA
    Metadata:
      'aws:cdk:path': IamLabStack/departmental-ec2-access/Resource
  contractorsroleassumptionpolicy0385216A:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Condition:
              StringLike:
                'iam:ResourceTag/contractorsassumerole': 'true'
            Effect: Allow
            Resource: '*'
        Version: 2012-10-17
      Description: ''
      ManagedPolicyName: contractorsroleassumptionpolicy
      Path: /
    Metadata:
      'aws:cdk:path': IamLabStack/contractorsroleassumptionpolicy/Resource
  AnneFBFC906B:
    Type: 'AWS::IAM::User'
    Properties:
      LoginProfile:
        Password: !Ref IAMUserPassword
      Tags:
        - Key: department
          Value: hr
      UserName: Anne
    Metadata:
      'aws:cdk:path': IamLabStack/Anne/Resource
  SallyACB517BA:
    Type: 'AWS::IAM::User'
    Properties:
      LoginProfile:
        Password: !Ref IAMUserPassword
      Tags:
        - Key: department
          Value: finance
      UserName: Sally
    Metadata:
      'aws:cdk:path': IamLabStack/Sally/Resource
  JohnF4BC11E6:
    Type: 'AWS::IAM::User'
    Properties:
      LoginProfile:
        Password: !Ref IAMUserPassword
      UserName: John
    Metadata:
      'aws:cdk:path': IamLabStack/John/Resource
  ec2poweruser3603E3C4:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              AWS:
                'Fn::Join':
                  - ''
                  - - 'arn:'
                    - Ref: 'AWS::Partition'
                    - !Sub ':iam::${AWS::AccountId}:root'
        Version: 2012-10-17
      ManagedPolicyArns:
        - 'Fn::Join':
            - ''
            - - 'arn:'
              - Ref: 'AWS::Partition'
              - ':iam::aws:policy/AmazonEC2FullAccess'
      RoleName: ec2poweruser
      Tags:
        - Key: contractorsassumerole
          Value: 'true'
    Metadata:
      'aws:cdk:path': IamLabStack/ec2poweruser/Resource
  Contractors48682DAB:
    Type: 'AWS::IAM::Group'
    Properties:
      GroupName: Contractors
      ManagedPolicyArns:
        - 'Fn::Join':
            - ''
            - - 'arn:'
              - Ref: 'AWS::Partition'
              - ':iam::aws:policy/IAMReadOnlyAccess'
        - Ref: contractorsroleassumptionpolicy0385216A
    Metadata:
      'aws:cdk:path': IamLabStack/Contractors/Resource
  MyVpcF9F0CA6F:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: IamLabStack/MyVpc
    Metadata:
      'aws:cdk:path': IamLabStack/MyVpc/Resource
  MyVpcPublicSubnet1SubnetF6608456:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.0.0.0/17
      VpcId:
        Ref: MyVpcF9F0CA6F
      AvailabilityZone: !Select 
        - 0
        - 'Fn::GetAZs': !Ref 'AWS::Region'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: 'aws-cdk:subnet-name'
          Value: Public
        - Key: 'aws-cdk:subnet-type'
          Value: Public
        - Key: Name
          Value: IamLabStack/MyVpc/PublicSubnet1
    Metadata:
      'aws:cdk:path': IamLabStack/MyVpc/PublicSubnet1/Subnet
  MyVpcPublicSubnet1RouteTableC46AB2F4:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        Ref: MyVpcF9F0CA6F
      Tags:
        - Key: Name
          Value: IamLabStack/MyVpc/PublicSubnet1
    Metadata:
      'aws:cdk:path': IamLabStack/MyVpc/PublicSubnet1/RouteTable
  MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet1RouteTableC46AB2F4
      SubnetId:
        Ref: MyVpcPublicSubnet1SubnetF6608456
    Metadata:
      'aws:cdk:path': IamLabStack/MyVpc/PublicSubnet1/RouteTableAssociation
  MyVpcPublicSubnet1DefaultRoute95FDF9EB:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId:
        Ref: MyVpcPublicSubnet1RouteTableC46AB2F4
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MyVpcIGW5C4A4F63
    DependsOn:
      - MyVpcVPCGW488ACE0D
    Metadata:
      'aws:cdk:path': IamLabStack/MyVpc/PublicSubnet1/DefaultRoute
  MyVpcPublicSubnet1EIP096967CB:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: IamLabStack/MyVpc/PublicSubnet1
    Metadata:
      'aws:cdk:path': IamLabStack/MyVpc/PublicSubnet1/EIP
  MyVpcPublicSubnet1NATGatewayAD3400C1:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId:
        'Fn::GetAtt':
          - MyVpcPublicSubnet1EIP096967CB
          - AllocationId
      SubnetId:
        Ref: MyVpcPublicSubnet1SubnetF6608456
      Tags:
        - Key: Name
          Value: IamLabStack/MyVpc/PublicSubnet1
    Metadata:
      'aws:cdk:path': IamLabStack/MyVpc/PublicSubnet1/NATGateway
  MyVpcPrivateSubnet1Subnet5057CF7E:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.0.128.0/17
      VpcId:
        Ref: MyVpcF9F0CA6F
      AvailabilityZone: !GetAtt MyVpcPublicSubnet1SubnetF6608456.AvailabilityZone
      MapPublicIpOnLaunch: false
      Tags:
        - Key: 'aws-cdk:subnet-name'
          Value: Private
        - Key: 'aws-cdk:subnet-type'
          Value: Private
        - Key: Name
          Value: IamLabStack/MyVpc/PrivateSubnet1
    Metadata:
      'aws:cdk:path': IamLabStack/MyVpc/PrivateSubnet1/Subnet
  MyVpcPrivateSubnet1RouteTable8819E6E2:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        Ref: MyVpcF9F0CA6F
      Tags:
        - Key: Name
          Value: IamLabStack/MyVpc/PrivateSubnet1
    Metadata:
      'aws:cdk:path': IamLabStack/MyVpc/PrivateSubnet1/RouteTable
  MyVpcPrivateSubnet1RouteTableAssociation56D38C7E:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet1RouteTable8819E6E2
      SubnetId:
        Ref: MyVpcPrivateSubnet1Subnet5057CF7E
    Metadata:
      'aws:cdk:path': IamLabStack/MyVpc/PrivateSubnet1/RouteTableAssociation
  MyVpcPrivateSubnet1DefaultRouteA8CDE2FA:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId:
        Ref: MyVpcPrivateSubnet1RouteTable8819E6E2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MyVpcPublicSubnet1NATGatewayAD3400C1
    Metadata:
      'aws:cdk:path': IamLabStack/MyVpc/PrivateSubnet1/DefaultRoute
  MyVpcIGW5C4A4F63:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: IamLabStack/MyVpc
    Metadata:
      'aws:cdk:path': IamLabStack/MyVpc/IGW
  MyVpcVPCGW488ACE0D:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId:
        Ref: MyVpcF9F0CA6F
      InternetGatewayId:
        Ref: MyVpcIGW5C4A4F63
    Metadata:
      'aws:cdk:path': IamLabStack/MyVpc/VPCGW
  hrEC2InstanceInstanceSecurityGroup577A75EA:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: IamLabStack/hr_EC2Instance/InstanceSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: '-1'
      Tags:
        - Key: department
          Value: hr
        - Key: Name
          Value: hr_instance
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      'aws:cdk:path': IamLabStack/hr_EC2Instance/InstanceSecurityGroup/Resource
  hrEC2InstanceInstanceRole7AE9AFD1:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: 2012-10-17
      Tags:
        - Key: department
          Value: hr
        - Key: Name
          Value: hr_instance
    Metadata:
      'aws:cdk:path': IamLabStack/hr_EC2Instance/InstanceRole/Resource
  hrEC2InstanceInstanceProfile07C2362D:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - Ref: hrEC2InstanceInstanceRole7AE9AFD1
    Metadata:
      'aws:cdk:path': IamLabStack/hr_EC2Instance/InstanceProfile
  hrEC2Instance3382102A:
    Type: 'AWS::EC2::Instance'
    Properties:
      AvailabilityZone: !GetAtt MyVpcPublicSubnet1SubnetF6608456.AvailabilityZone
      IamInstanceProfile:
        Ref: hrEC2InstanceInstanceProfile07C2362D
      ImageId: !FindInMap [ RegionMap, !Ref 'AWS::Region', AMI ]
      InstanceType: t2.micro
      SecurityGroupIds:
        - 'Fn::GetAtt':
            - hrEC2InstanceInstanceSecurityGroup577A75EA
            - GroupId
      SubnetId:
        Ref: MyVpcPrivateSubnet1Subnet5057CF7E
      Tags:
        - Key: department
          Value: hr
        - Key: Name
          Value: hr_instance
      UserData:
        'Fn::Base64': '#!/bin/bash'
    DependsOn:
      - hrEC2InstanceInstanceRole7AE9AFD1
    Metadata:
      'aws:cdk:path': IamLabStack/hr_EC2Instance/Resource
  financeEC2InstanceInstanceSecurityGroupB3F6668F:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: IamLabStack/finance_EC2Instance/InstanceSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: '-1'
      Tags:
        - Key: department
          Value: finance
        - Key: Name
          Value: finance_instance
      VpcId:
        Ref: MyVpcF9F0CA6F
    Metadata:
      'aws:cdk:path': IamLabStack/finance_EC2Instance/InstanceSecurityGroup/Resource
  financeEC2InstanceInstanceRole28A232CB:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: 2012-10-17
      Tags:
        - Key: department
          Value: finance
        - Key: Name
          Value: finance_instance
    Metadata:
      'aws:cdk:path': IamLabStack/finance_EC2Instance/InstanceRole/Resource
  financeEC2InstanceInstanceProfileBFA4E700:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - Ref: financeEC2InstanceInstanceRole28A232CB
    Metadata:
      'aws:cdk:path': IamLabStack/finance_EC2Instance/InstanceProfile
  financeEC2Instance63EC6D39:
    Type: 'AWS::EC2::Instance'
    Properties:
      AvailabilityZone: !GetAtt MyVpcPublicSubnet1SubnetF6608456.AvailabilityZone
      IamInstanceProfile:
        Ref: financeEC2InstanceInstanceProfileBFA4E700
        ImageId: !FindInMap [ RegionMap, !Ref 'AWS::Region', AMI ]
      InstanceType: t2.micro
      SecurityGroupIds:
        - 'Fn::GetAtt':
            - financeEC2InstanceInstanceSecurityGroupB3F6668F
            - GroupId
      SubnetId:
        Ref: MyVpcPrivateSubnet1Subnet5057CF7E
      Tags:
        - Key: department
          Value: finance
        - Key: Name
          Value: finance_instance
      UserData:
        'Fn::Base64': '#!/bin/bash'
    DependsOn:
      - financeEC2InstanceInstanceRole28A232CB
    Metadata:
      'aws:cdk:path': IamLabStack/finance_EC2Instance/Resource
  CDKMetadata:
    Type: 'AWS::CDK::Metadata'
    Properties:
      Modules: >-
        aws-cdk=1.76.0,@aws-cdk/assets=1.76.0,@aws-cdk/aws-cloudwatch=1.76.0,@aws-cdk/aws-ec2=1.76.0,@aws-cdk/aws-events=1.76.0,@aws-cdk/aws-iam=1.76.0,@aws-cdk/aws-kms=1.76.0,@aws-cdk/aws-logs=1.76.0,@aws-cdk/aws-s3=1.76.0,@aws-cdk/aws-s3-assets=1.76.0,@aws-cdk/aws-ssm=1.76.0,@aws-cdk/cloud-assembly-schema=1.76.0,@aws-cdk/core=1.76.0,@aws-cdk/cx-api=1.76.0,@aws-cdk/region-info=1.76.0,jsii-runtime=node.js/v12.16.1
    Metadata:
      'aws:cdk:path': IamLabStack/CDKMetadata/Default
Parameters:
  IAMUserPassword:
    Type: String
    Default: 123456789aA
    Description: Enter the your IAM user password, password should be at least one lowercase and one uppercase
